{
    "openapi": "3.0.0",
    "info": {
        "title": "GPWebTech API",
        "description": "API For GPWebTech operations",
        "license": {
            "name": "MIT",
            "url": "https:\/\/opensource.org\/licenses\/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http:\/\/127.0.0.1:8000\/"
        },
        {
            "url": "https:\/\/api.gpwebtech.nl\/"
        }
    ],
    "paths": {
        "\/config": {
            "get": {
                "tags": [
                    "Config"
                ],
                "summary": "List configuration items",
                "operationId": "listConfigs",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": "1"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "id",
                            "enum": [
                                "id",
                                "key",
                                "domain",
                                "value",
                                "createdAt",
                                "updatedAt"
                            ]
                        }
                    },
                    {
                        "name": "orderWay",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "ASC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[key]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[domain]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[value]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[createdAt]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[updatedAt]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List the configuration items, paginated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "offset": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "items_per_page": {
                                            "type": "integer",
                                            "example": "1,"
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "has_next_page": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "has_previous_page": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ListConfig"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT Token not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid search parameters: id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Config"
                ],
                "summary": "Create a configuration item",
                "operationId": "createConfig",
                "requestBody": {
                    "description": "Config",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateConfig"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Config succesfully created",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ListConfig"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT Token not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid parameters: id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "\/config\/{domain}\/{key}": {
            "get": {
                "tags": [
                    "Config"
                ],
                "summary": "Get a configuration item",
                "operationId": "getConfig",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get configuration item",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ListConfig"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT Token not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid parameters: id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Config"
                ],
                "summary": "Update configuration",
                "operationId": "updateConfig",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Config",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateConfig"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Configuration item updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ListConfig"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT Token not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid parameters: id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Config"
                ],
                "summary": "Remove configuration",
                "operationId": "deleteConfig",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Config removed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "boolean",
                                    "example": true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT Token not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete this configuration item"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "\/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "List users",
                "operationId": "listUsers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": "1"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "id",
                            "enum": [
                                "id",
                                "email"
                            ]
                        }
                    },
                    {
                        "name": "orderWay",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "ASC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[email]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[createdAt]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[updatedAt]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List the users, paginated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "offset": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "items_per_page": {
                                            "type": "integer",
                                            "example": "1,"
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "has_next_page": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "has_previous_page": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ListUser"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT Token not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid search parameters: id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a user",
                "operationId": "createUser",
                "requestBody": {
                    "description": "User",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User succesfully created",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ListUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT Token not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid parameters: id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "\/user\/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a user",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ListUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT Token not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid parameters: id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update a user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ListUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT Token not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid parameters: id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove a user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User removed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "boolean",
                                    "example": true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT Token not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete this user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update a user password",
                "operationId": "updateUserPassword",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PatchUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User password updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ListUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT Token not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password does not meet the minimum length requirements"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "\/login": {
            "post": {
                "tags": [
                    "Login Check"
                ],
                "summary": "Creates a user token.",
                "description": "Creates a user token.",
                "operationId": "login_check_post",
                "requestBody": {
                    "description": "The login data",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "password": {
                                        "type": "string",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User token created",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "required": [
                                        "token"
                                    ],
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "readOnly": true,
                                            "nullable": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ListUser": {
                "title": "ListUser",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "email": {
                        "type": "string",
                        "example": "john@doe.com"
                    },
                    "roles": {
                        "type": "string",
                        "example": "user,admin"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2023-10-17 11:28:40"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2023-10-17 11:28:40"
                    }
                },
                "type": "object"
            },
            "PatchUser": {
                "title": "PatchUser",
                "properties": {
                    "password": {
                        "type": "string",
                        "example": "plainTextPassword"
                    }
                },
                "type": "object"
            },
            "UpdateUser": {
                "title": "UpdateUser",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "john@doe.com"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "user"
                        }
                    }
                },
                "type": "object"
            },
            "CreateUser": {
                "title": "CreateUser",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "john@doe.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "plainTextPassword"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "user"
                        }
                    }
                },
                "type": "object"
            },
            "ListConfig": {
                "title": "ListConfig",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "key": {
                        "type": "string",
                        "example": "configkeyname"
                    },
                    "domain": {
                        "type": "string",
                        "example": "shop.front.context"
                    },
                    "value": {
                        "type": "string",
                        "example": "test value"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2023-10-17 11:28:40"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2023-10-17 11:28:40"
                    }
                },
                "type": "object"
            },
            "UpdateConfig": {
                "title": "UpdateConfig",
                "properties": {
                    "key": {
                        "type": "string",
                        "example": "configkeyname"
                    },
                    "domain": {
                        "type": "string",
                        "example": "shop.front.context"
                    },
                    "value": {
                        "type": "string",
                        "example": "test value"
                    }
                },
                "type": "object"
            },
            "CreateConfig": {
                "title": "CreateConfig",
                "properties": {
                    "key": {
                        "type": "string",
                        "example": "configkeyname"
                    },
                    "domain": {
                        "type": "string",
                        "example": "shop.front.context"
                    },
                    "value": {
                        "type": "string",
                        "example": "test value"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}